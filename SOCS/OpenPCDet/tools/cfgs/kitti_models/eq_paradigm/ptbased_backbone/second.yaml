# Point-based backbone + SECOND SSD head.
CLASS_NAMES: ['Car', 'Pedestrian', 'Cyclist']

DATA_CONFIG:
    _BASE_CONFIG_: cfgs/dataset_configs/kitti_dataset.yaml

    DATA_PROCESSOR:
        -   NAME: mask_points_and_boxes_outside_range
            REMOVE_OUTSIDE_BOXES: True

        -   NAME: sample_points
            NUM_POINTS: {
                'train': 16384,
                'test': 16384
            }

        -   NAME: shuffle_points
            SHUFFLE_ENABLED: {
                'train': True,
                'test': False
            }

        # To utilize anchor_generator in OpenPCDet.
        # not used in model.
        - NAME: transform_points_to_voxels
          VOXEL_SIZE: [ 0.05, 0.05, 0.1 ]
          MAX_POINTS_PER_VOXEL: 5
          MAX_NUMBER_OF_VOXELS: {
            'train': 16000,
            'test': 40000
          }

MODEL:
    NAME: SECONDNet

    BACKBONE_3D:
      NAME: EQPointNet2Backbone
      SA_CONFIG:
        NPOINTS: [ 4096, 1024, 256, 64 ]
        RADIUS: [ [ 0.1, 0.5 ], [ 0.5, 1.0 ], [ 1.0, 2.0 ], [ 2.0, 4.0 ] ]
        NSAMPLE: [ [ 16, 32 ], [ 16, 32 ], [ 16, 32 ], [ 16, 32 ] ]
        MLPS: [ [ [ 16, 16, 32 ], [ 32, 32, 64 ] ],
                [ [ 64, 64, 128 ], [ 64, 96, 128 ] ],
                [ [ 128, 196, 256 ], [ 128, 196, 256 ] ],
                [ [ 256, 256, 512 ], [ 256, 384, 512 ] ] ]

    NECK:
        NAME: QNetNeck

        SUPPORT_CFG:
            PREPROCESSING_FUNC: _preprocess_point_support_features
            SUPPORT_KEYS: ['l0', 'l1', 'l2', 'l3']

        QUERY_POSITION_CFG:
            SELECTION_FUNCTION: _get_bev_query_position
            POINT_CLOUD_RANGE: [0, -40, -3, 70.4, 40, 1]
            VOXEL_SIZE: [0.4, 0.4, 4]

        # /path/to/your/qnet.yaml
        QNET_CFG_FILE: cfgs/kitti_models/eq_paradigm/ptbased_backbone/qnet.yaml
        # hand-crafted qnet_cfg
        QNET_CFG:
          SUPPORT_FEATURE_PROCESSOR:
            TARGET_CHANNEL: 96
          Q_DIM_FEEDFORWARD_PER_LEVEL: 384
          AUX_LOSS_CHANNEL: None  # no aux loss mapper, since channels are all same.
          AUX_LOSS_SUPP_TYPE: layer-wise-supp
          MERGING_MLP: [384]

        QUERY_FEATURE_CFG:
            POSTPROCESSING_FUNC: _process_bev_query_features

    BACKBONE_2D:  # MLP head.
        NAME: BaseMLPBackbone
        MLP_CHANNELS: [128, 128, 128, 128]

    DENSE_HEAD:
      NAME: AnchorHeadSingle
      CLASS_AGNOSTIC: False

      USE_DIRECTION_CLASSIFIER: True
      DIR_OFFSET: 0.78539
      DIR_LIMIT_OFFSET: 0.0
      NUM_DIR_BINS: 2

      ANCHOR_GENERATOR_CONFIG: [
        {
          'class_name': 'Car',
          'anchor_sizes': [ [ 3.9, 1.6, 1.56 ] ],
          'anchor_rotations': [ 0, 1.57 ],
          'anchor_bottom_heights': [ -1.78 ],
          'align_center': False,
          'feature_map_stride': 8,
          'matched_threshold': 0.6,
          'unmatched_threshold': 0.45
        },
        {
          'class_name': 'Pedestrian',
          'anchor_sizes': [ [ 0.8, 0.6, 1.73 ] ],
          'anchor_rotations': [ 0, 1.57 ],
          'anchor_bottom_heights': [ -0.6 ],
          'align_center': False,
          'feature_map_stride': 8,
          'matched_threshold': 0.5,
          'unmatched_threshold': 0.35
        },
        {
          'class_name': 'Cyclist',
          'anchor_sizes': [ [ 1.76, 0.6, 1.73 ] ],
          'anchor_rotations': [ 0, 1.57 ],
          'anchor_bottom_heights': [ -0.6 ],
          'align_center': False,
          'feature_map_stride': 8,
          'matched_threshold': 0.5,
          'unmatched_threshold': 0.35
        }
      ]

      TARGET_ASSIGNER_CONFIG:
        NAME: AxisAlignedTargetAssigner
        POS_FRACTION: -1.0
        SAMPLE_SIZE: 512
        NORM_BY_NUM_EXAMPLES: False
        MATCH_HEIGHT: False
        BOX_CODER: ResidualCoder

      LOSS_CONFIG:
        LOSS_WEIGHTS: {
          'cls_weight': 1.0,
          'loc_weight': 2.0,
          'dir_weight': 0.2,
          'code_weights': [ 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 ]
        }

    # Auxiliary loss.
    POINT_HEAD:
        NAME: PointHeadAuxLoss

        POINT_COORDS_KEY: query_positions
        POINT_FEATURE_KEY: aux_query_features

        # aux gt mapping.
        TARGET_ASSIGNMENT_CFG:
          GT_EXTRA_WIDTH: [0.2, 0.2, 100.]
        AUX_SUPERVISION_CFG:  # randomly select aux supervised q-pos
          QUERY_NUM: 2200
          POS_RATIO: 0.5
          HARDNEG_RATIO: 0.5
          HARDNEG_WIDTH: [4.0, 4.0, 100]

        # aux head setting.
        AUX_LOSS_WEIGHT: [0.1, 0.1, 0.1,
                          0.1, 0.1, 0.1,
                          0.1, 0.1, 0.1,
                          0.1, 0.1, 0.1,]  # totally 4 levels * 3 layers.
        INPUT_CHANNELS: 96
        CLS_FC: [128, 128]
        REG_FC: [128, 128]
        CLASS_AGNOSTIC: True
        LOSS_CONFIG:
          LOSS_WEIGHTS: {
            'aux_cls_weight': 1.0,
            'aux_reg_weight': 1.0,
          }

    POST_PROCESSING:
        RECALL_THRESH_LIST: [0.3, 0.5, 0.7]
        SCORE_THRESH: 0.1
        OUTPUT_RAW_SCORE: False

        EVAL_METRIC: kitti

        NMS_CONFIG:
            MULTI_CLASSES_NMS: False
            NMS_TYPE: nms_gpu
            NMS_THRESH: 0.01
            NMS_PRE_MAXSIZE: 4096
            NMS_POST_MAXSIZE: 500


OPTIMIZATION:
    BATCH_SIZE_PER_GPU: 4
    NUM_EPOCHS: 80

    OPTIMIZER: adam_onecycle
    LR: 0.003
    WEIGHT_DECAY: 0.01
    MOMENTUM: 0.9

    MOMS: [0.95, 0.85]
    PCT_START: 0.4
    DIV_FACTOR: 10
    DECAY_STEP_LIST: [35, 45]
    LR_DECAY: 0.1
    LR_CLIP: 0.0000001

    LR_WARMUP: False
    WARMUP_EPOCH: 1

    GRAD_NORM_CLIP: 10
